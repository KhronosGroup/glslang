430.vert
ERROR: 0:3: 'location' : can only apply to uniform, buffer, in, or out storage qualifiers 
ERROR: 0:7: 'input block' : not supported in this stage: vertex
ERROR: 0:7: 'location qualifier on in/out block' : not supported for this version or the enabled extensions 
ERROR: 0:8: 'location qualifier on in/out block' : not supported for this version or the enabled extensions 
ERROR: 0:11: 'vs_in_attrib_max1' : redeclaration of array with size 
ERROR: 0:26: 'invariant' : can only apply to an output 
ERROR: 0:24: 'g' : cannot use storage or interpolation qualifiers on structure members 
ERROR: 0:25: 'h' : cannot use storage or interpolation qualifiers on structure members 
ERROR: 0:26: 'i' : cannot use invariant qualifier on structure members 
ERROR: 0:27: 'j' : cannot use memory qualifiers on structure members 
ERROR: 0:28: 'm3' : cannot use layout qualifiers on structure members 
ERROR: 0:31: '' : cannot use invariant qualifier on a function parameter 
ERROR: 0:33: '' : cannot use layout qualifiers on a function parameter 
ERROR: 0:34: '' : cannot use auxiliary or interpolation qualifiers on a function parameter 
ERROR: 0:45: 'location' : overlapping use of location 53
ERROR: 0:50: 'gl_ClipDistance array size' : must be less than or equal to gl_MaxClipDistances (8)
ERROR: 0:54: 'start' : undeclared identifier 
ERROR: 0:54: '' : constant expression required 
ERROR: 0:54: 'layout-id value' : scalar integer expression required 
ERROR: 0:54: 'location' : needs a literal integer 
ERROR: 0:56: 'input block' : not supported in this stage: vertex
ERROR: 0:57: 'location on block member' : not supported for this version or the enabled extensions 
ERROR: 0:60: 'input block' : not supported in this stage: vertex
ERROR: 0:61: 'location on block member' : not supported for this version or the enabled extensions 
ERROR: 0:62: 'location on block member' : not supported for this version or the enabled extensions 
ERROR: 0:65: 'uniform buffer-member align' : not supported for this version or the enabled extensions 
ERROR: 0:67: 'uniform buffer-member align' : not supported for this version or the enabled extensions 
ERROR: 0:68: 'uniform buffer-member align' : not supported for this version or the enabled extensions 
ERROR: 0:68: 'offset on block member' : not supported for this version or the enabled extensions 
ERROR: 0:69: 'offset on block member' : not supported for this version or the enabled extensions 
ERROR: 0:67: 'align' : can only be used with std140, std430, or scalar layout packing 
ERROR: 0:68: 'offset/align' : can only be used with std140, std430, or scalar layout packing 
ERROR: 0:69: 'offset/align' : can only be used with std140, std430, or scalar layout packing 
ERROR: 0:74: 'offset on block member' : not supported for this version or the enabled extensions 
ERROR: 0:77: 'gl_MaxTransformFeedbackBuffers' : required extension not requested: GL_ARB_enhanced_layouts
ERROR: 0:78: 'gl_MaxTransformFeedbackInterleavedComponents' : required extension not requested: GL_ARB_enhanced_layouts
ERROR: 0:81: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:84: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:84: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:86: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:86: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:86: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:87: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:87: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:89: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:89: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:89: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:95: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:96: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:96: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:96: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:120: 'input block' : not supported in this stage: vertex
ERROR: 0:126: 'input block' : not supported in this stage: vertex
ERROR: 0:149: 'shared' : not supported in this stage: vertex
ERROR: 0:153: 'barrier' : no matching overloaded function found 
ERROR: 0:157: 'memoryBarrierShared' : no matching overloaded function found 
ERROR: 0:159: 'groupMemoryBarrier' : no matching overloaded function found 
ERROR: 0:162: 'buffer' : buffers can be declared only as blocks 
ERROR: 0:171: 'textureSamples and imageSamples' : not supported for this version or the enabled extensions 
ERROR: 0:172: 'textureSamples and imageSamples' : not supported for this version or the enabled extensions 
ERROR: 0:173: 'textureSamples and imageSamples' : not supported for this version or the enabled extensions 
ERROR: 0:174: 'textureSamples and imageSamples' : not supported for this version or the enabled extensions 
ERROR: 0:224: 'textureQueryLevels' : no matching overloaded function found 
ERROR: 0:224: 'assign' :  cannot convert from ' const float' to ' temp int'
ERROR: 0:225: 'textureQueryLevels' : no matching overloaded function found 
ERROR: 0:225: 'assign' :  cannot convert from ' const float' to ' temp int'
ERROR: 66 compilation errors.  No code generated.


Shader version: 430
Requested GL_ARB_enhanced_layouts
Requested GL_ARB_shader_texture_image_samples
in xfb mode
ERROR: node is still EOpNull!
0:17  Function Definition: foo( ( global void)
0:17    Function Parameters: 
0:19    Sequence
0:19      move second child to first child ( temp float)
0:19        direct index ( temp float ClipDistance)
0:19          gl_ClipDistance: direct index for structure ( out 17-element array of float ClipDistance)
0:19            'anon@0' ( out block{ out 17-element array of float ClipDistance gl_ClipDistance})
0:19            Constant:
0:19              2 (const uint)
0:19          Constant:
0:19            2 (const int)
0:19        Constant:
0:19          3.700000
0:34  Function Definition: foo3(vf4;vf3;vf2;vf3; ( global void)
0:34    Function Parameters: 
0:34      'v4' ( in 4-component vector of float)
0:34      'v3' ( volatile in 3-component vector of float)
0:34      'v2' ( in 2-component vector of float)
0:34      'cv3' ( in 3-component vector of float)
0:151  Function Definition: fooBarrier( ( global void)
0:151    Function Parameters: 
0:153    Sequence
0:153      Constant:
0:153        0.000000
0:154      MemoryBarrier ( global void)
0:155      MemoryBarrierAtomicCounter ( global void)
0:156      MemoryBarrierBuffer ( global void)
0:157      Constant:
0:157        0.000000
0:158      MemoryBarrierImage ( global void)
0:159      Constant:
0:159        0.000000
0:169  Function Definition: fooq( ( global void)
0:169    Function Parameters: 
0:171    Sequence
0:171      Sequence
0:171        move second child to first child ( temp int)
0:171          's' ( temp int)
0:171          textureSamples ( global int)
0:171            's2dms' ( uniform sampler2DMS)
0:172      add second child into first child ( temp int)
0:172        's' ( temp int)
0:172        textureSamples ( global int)
0:172          'us2dmsa' ( uniform usampler2DMSArray)
0:173      add second child into first child ( temp int)
0:173        's' ( temp int)
0:173        imageQuerySamples ( global int)
0:173          'ii2dms' (layout( rgba32i) uniform iimage2DMS)
0:174      add second child into first child ( temp int)
0:174        's' ( temp int)
0:174        imageQuerySamples ( global int)
0:174          'i2dmsa' (layout( rgba32f) uniform image2DMSArray)
0:179  Function Definition: fooq2( ( global void)
0:179    Function Parameters: 
0:181    Sequence
0:181      Sequence
0:181        move second child to first child ( temp int)
0:181          's' ( temp int)
0:181          textureSamples ( global int)
0:181            's2dms' ( uniform sampler2DMS)
0:182      add second child into first child ( temp int)
0:182        's' ( temp int)
0:182        textureSamples ( global int)
0:182          'us2dmsa' ( uniform usampler2DMSArray)
0:183      add second child into first child ( temp int)
0:183        's' ( temp int)
0:183        imageQuerySamples ( global int)
0:183          'ii2dms' (layout( rgba32i) uniform iimage2DMS)
0:184      add second child into first child ( temp int)
0:184        's' ( temp int)
0:184        imageQuerySamples ( global int)
0:184          'i2dmsa' (layout( rgba32f) uniform image2DMSArray)
0:205  Function Definition: qlod( ( global void)
0:205    Function Parameters: 
0:?     Sequence
0:209      move second child to first child ( temp int)
0:209        'levels' ( temp int)
0:209        textureQueryLevels ( global int)
0:209          'samp1D' ( uniform sampler1D)
0:210      move second child to first child ( temp int)
0:210        'levels' ( temp int)
0:210        textureQueryLevels ( global int)
0:210          'usamp2D' ( uniform usampler2D)
0:211      move second child to first child ( temp int)
0:211        'levels' ( temp int)
0:211        textureQueryLevels ( global int)
0:211          'isamp3D' ( uniform isampler3D)
0:212      move second child to first child ( temp int)
0:212        'levels' ( temp int)
0:212        textureQueryLevels ( global int)
0:212          'isampCube' ( uniform isamplerCube)
0:213      move second child to first child ( temp int)
0:213        'levels' ( temp int)
0:213        textureQueryLevels ( global int)
0:213          'isamp1DA' ( uniform isampler1DArray)
0:214      move second child to first child ( temp int)
0:214        'levels' ( temp int)
0:214        textureQueryLevels ( global int)
0:214          'samp2DA' ( uniform sampler2DArray)
0:215      move second child to first child ( temp int)
0:215        'levels' ( temp int)
0:215        textureQueryLevels ( global int)
0:215          'usampCubeA' ( uniform usamplerCubeArray)
0:217      move second child to first child ( temp int)
0:217        'levels' ( temp int)
0:217        textureQueryLevels ( global int)
0:217          'samp1Ds' ( uniform sampler1DShadow)
0:218      move second child to first child ( temp int)
0:218        'levels' ( temp int)
0:218        textureQueryLevels ( global int)
0:218          'samp2Ds' ( uniform sampler2DShadow)
0:219      move second child to first child ( temp int)
0:219        'levels' ( temp int)
0:219        textureQueryLevels ( global int)
0:219          'sampCubes' ( uniform samplerCubeShadow)
0:220      move second child to first child ( temp int)
0:220        'levels' ( temp int)
0:220        textureQueryLevels ( global int)
0:220          'samp1DAs' ( uniform sampler1DArrayShadow)
0:221      move second child to first child ( temp int)
0:221        'levels' ( temp int)
0:221        textureQueryLevels ( global int)
0:221          'samp2DAs' ( uniform sampler2DArrayShadow)
0:222      move second child to first child ( temp int)
0:222        'levels' ( temp int)
0:222        textureQueryLevels ( global int)
0:222          'sampCubeAs' ( uniform samplerCubeArrayShadow)
0:224      'levels' ( temp int)
0:225      'levels' ( temp int)
0:?   Linker Objects
0:?     'v4' (layout( location=3) temp 4-component vector of float)
0:?     'uv4' (layout( location=4) uniform 4-component vector of float)
0:?     'b1' (layout( location=2) in block{ in 4-component vector of float v})
0:?     'b2' (layout( location=2) out block{ out 4-component vector of float v})
0:?     'vs_in_attrib_max1' (layout( location=0) in 16-element array of 4-component vector of float)
0:?     'anon@0' ( out block{ out 17-element array of float ClipDistance gl_ClipDistance})
0:?     'cs' (layout( location=10) smooth out 2-element array of structure{ global 7-element array of 3X2 matrix of float m,  global float f})
0:?     'cf' (layout( location=54) smooth out float)
0:?     'cg' (layout( location=53) smooth out float)
0:?     'alias1' (layout( location=10) in 4-component vector of float)
0:?     'alias2' (layout( location=10) in 4-component vector of float)
0:?     'v6e' (layout( location=0) in 4-component vector of float)
0:?     'ininst2e' ( in block{layout( location=25) in float f2})
0:?     'in4e' ( in block{layout( location=50) in float f1, layout( location=51) in float f2})
0:?     'inst4e' (layout( column_major std140 align=16) uniform block{layout( column_major std140 offset=0 align=16) uniform int a})
0:?     'inst9e' (layout( column_major shared align=32) uniform block{layout( column_major shared offset=12 align=4) uniform float f, layout( column_major shared offset=20) uniform float g})
0:?     'spinste' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 4-component vector of float a, layout( column_major std140 offset=32) uniform 3-component vector of float b})
0:?     'aconste' ( global 4-element array of int)
0:?     'bconste' ( global 64-element array of int)
0:?     'bbinst2' ( out block{layout( xfb_buffer=0 xfb_offset=64) out 4-component vector of float bbv})
0:?     'bge' (layout( xfb_buffer=2 xfb_offset=48 xfb_stride=80) smooth out 4-component vector of float)
0:?     'bhe' (layout( xfb_buffer=3 xfb_offset=32 xfb_stride=64) smooth out 4-component vector of float)
0:?     'bbinst4e' (layout( xfb_stride=80) out block{layout( xfb_buffer=2 xfb_offset=16) out 4-component vector of float bbv1, layout( xfb_buffer=2 xfb_offset=32) out 4-component vector of float bbv2})
0:?     'bbinst5e' ( out block{layout( xfb_buffer=3 xfb_offset=0) out 4-component vector of float bbv1, layout( xfb_buffer=3 xfb_offset=48 xfb_stride=64) out 4-component vector of float bbv2})
0:?     'inst4' (layout( column_major std140 align=16) uniform block{layout( column_major std140 offset=0 align=16) uniform int a})
0:?     'inst9' (layout( column_major std430 align=32) uniform block{layout( column_major std430 offset=12 align=4) uniform float f, layout( column_major std430 offset=20 align=32) uniform float g})
0:?     'spinst' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 4-component vector of float a, layout( column_major std140 offset=32) uniform 3-component vector of float b})
0:?     'aconst' ( global 4-element array of int)
0:?     'bconst' ( global 64-element array of int)
0:?     'start2' ( const int)
0:?       5 (const int)
0:?     'v6' (layout( location=19) in 4-component vector of float)
0:?     'ininst2' ( in block{layout( location=28) in bool b1, layout( location=29) in float f1, layout( location=25) in float f2})
0:?     'in4' ( in block{layout( location=50) in float f1, layout( location=51) in float f2})
0:?     'bbinst2g' ( out block{layout( xfb_buffer=3 xfb_offset=64) out 4-component vector of float bbv})
0:?     'bg' (layout( xfb_buffer=1 xfb_offset=48 xfb_stride=80) smooth out 4-component vector of float)
0:?     'bh' (layout( xfb_buffer=1 xfb_offset=32 xfb_stride=80) smooth out 4-component vector of float)
0:?     'bbinst4' (layout( xfb_stride=80) out block{layout( xfb_buffer=1 xfb_offset=16) out 4-component vector of float bbv1})
0:?     'bbinst5' ( out block{layout( xfb_buffer=1 xfb_offset=0) out 4-component vector of float bbv1, layout( xfb_buffer=1 xfb_offset=64 xfb_stride=80) out 4-component vector of float bbv2})
0:?     'sharedv' ( shared 4-component vector of float)
0:?     'v' ( buffer 4-component vector of float)
0:?     's2dms' ( uniform sampler2DMS)
0:?     'us2dmsa' ( uniform usampler2DMSArray)
0:?     'ii2dms' (layout( rgba32i) uniform iimage2DMS)
0:?     'i2dmsa' (layout( rgba32f) uniform image2DMSArray)
0:?     'samp1D' ( uniform sampler1D)
0:?     'usamp2D' ( uniform usampler2D)
0:?     'isamp3D' ( uniform isampler3D)
0:?     'isampCube' ( uniform isamplerCube)
0:?     'isamp1DA' ( uniform isampler1DArray)
0:?     'samp2DA' ( uniform sampler2DArray)
0:?     'usampCubeA' ( uniform usamplerCubeArray)
0:?     'samp1Ds' ( uniform sampler1DShadow)
0:?     'samp2Ds' ( uniform sampler2DShadow)
0:?     'sampCubes' ( uniform samplerCubeShadow)
0:?     'samp1DAs' ( uniform sampler1DArrayShadow)
0:?     'samp2DAs' ( uniform sampler2DArrayShadow)
0:?     'sampCubeAs' ( uniform samplerCubeArrayShadow)
0:?     'sampBuf' ( uniform samplerBuffer)
0:?     'sampRect' ( uniform sampler2DRect)
0:?     'gl_VertexID' ( gl_VertexId int VertexId)
0:?     'gl_InstanceID' ( gl_InstanceId int InstanceId)


Linked vertex stage:

ERROR: Linking vertex stage: Missing entry point: Each stage requires one entry point
ERROR: Linking vertex stage: xfb_stride is too small to hold all buffer entries:
ERROR:     xfb_buffer 3, xfb_stride 64, minimum stride needed: 80

Shader version: 430
Requested GL_ARB_enhanced_layouts
Requested GL_ARB_shader_texture_image_samples
in xfb mode
ERROR: node is still EOpNull!
0:?   Linker Objects
0:?     'v4' (layout( location=3) temp 4-component vector of float)
0:?     'uv4' (layout( location=4) uniform 4-component vector of float)
0:?     'b1' (layout( location=2) in block{ in 4-component vector of float v})
0:?     'b2' (layout( location=2) out block{ out 4-component vector of float v})
0:?     'vs_in_attrib_max1' (layout( location=0) in 16-element array of 4-component vector of float)
0:?     'anon@0' ( out block{ out 17-element array of float ClipDistance gl_ClipDistance})
0:?     'cs' (layout( location=10) smooth out 2-element array of structure{ global 7-element array of 3X2 matrix of float m,  global float f})
0:?     'cf' (layout( location=54) smooth out float)
0:?     'cg' (layout( location=53) smooth out float)
0:?     'alias1' (layout( location=10) in 4-component vector of float)
0:?     'alias2' (layout( location=10) in 4-component vector of float)
0:?     'v6e' (layout( location=0) in 4-component vector of float)
0:?     'ininst2e' ( in block{layout( location=25) in float f2})
0:?     'in4e' ( in block{layout( location=50) in float f1, layout( location=51) in float f2})
0:?     'inst4e' (layout( column_major std140 align=16) uniform block{layout( column_major std140 offset=0 align=16) uniform int a})
0:?     'inst9e' (layout( column_major shared align=32) uniform block{layout( column_major shared offset=12 align=4) uniform float f, layout( column_major shared offset=20) uniform float g})
0:?     'spinste' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 4-component vector of float a, layout( column_major std140 offset=32) uniform 3-component vector of float b})
0:?     'aconste' ( global 4-element array of int)
0:?     'bconste' ( global 64-element array of int)
0:?     'bbinst2' ( out block{layout( xfb_buffer=0 xfb_offset=64) out 4-component vector of float bbv})
0:?     'bge' (layout( xfb_buffer=2 xfb_offset=48 xfb_stride=80) smooth out 4-component vector of float)
0:?     'bhe' (layout( xfb_buffer=3 xfb_offset=32 xfb_stride=64) smooth out 4-component vector of float)
0:?     'bbinst4e' (layout( xfb_stride=80) out block{layout( xfb_buffer=2 xfb_offset=16) out 4-component vector of float bbv1, layout( xfb_buffer=2 xfb_offset=32) out 4-component vector of float bbv2})
0:?     'bbinst5e' ( out block{layout( xfb_buffer=3 xfb_offset=0) out 4-component vector of float bbv1, layout( xfb_buffer=3 xfb_offset=48 xfb_stride=64) out 4-component vector of float bbv2})
0:?     'inst4' (layout( column_major std140 align=16) uniform block{layout( column_major std140 offset=0 align=16) uniform int a})
0:?     'inst9' (layout( column_major std430 align=32) uniform block{layout( column_major std430 offset=12 align=4) uniform float f, layout( column_major std430 offset=20 align=32) uniform float g})
0:?     'spinst' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 4-component vector of float a, layout( column_major std140 offset=32) uniform 3-component vector of float b})
0:?     'aconst' ( global 4-element array of int)
0:?     'bconst' ( global 64-element array of int)
0:?     'start2' ( const int)
0:?       5 (const int)
0:?     'v6' (layout( location=19) in 4-component vector of float)
0:?     'ininst2' ( in block{layout( location=28) in bool b1, layout( location=29) in float f1, layout( location=25) in float f2})
0:?     'in4' ( in block{layout( location=50) in float f1, layout( location=51) in float f2})
0:?     'bbinst2g' ( out block{layout( xfb_buffer=3 xfb_offset=64) out 4-component vector of float bbv})
0:?     'bg' (layout( xfb_buffer=1 xfb_offset=48 xfb_stride=80) smooth out 4-component vector of float)
0:?     'bh' (layout( xfb_buffer=1 xfb_offset=32 xfb_stride=80) smooth out 4-component vector of float)
0:?     'bbinst4' (layout( xfb_stride=80) out block{layout( xfb_buffer=1 xfb_offset=16) out 4-component vector of float bbv1})
0:?     'bbinst5' ( out block{layout( xfb_buffer=1 xfb_offset=0) out 4-component vector of float bbv1, layout( xfb_buffer=1 xfb_offset=64 xfb_stride=80) out 4-component vector of float bbv2})
0:?     'sharedv' ( shared 4-component vector of float)
0:?     'v' ( buffer 4-component vector of float)
0:?     's2dms' ( uniform sampler2DMS)
0:?     'us2dmsa' ( uniform usampler2DMSArray)
0:?     'ii2dms' (layout( rgba32i) uniform iimage2DMS)
0:?     'i2dmsa' (layout( rgba32f) uniform image2DMSArray)
0:?     'samp1D' ( uniform sampler1D)
0:?     'usamp2D' ( uniform usampler2D)
0:?     'isamp3D' ( uniform isampler3D)
0:?     'isampCube' ( uniform isamplerCube)
0:?     'isamp1DA' ( uniform isampler1DArray)
0:?     'samp2DA' ( uniform sampler2DArray)
0:?     'usampCubeA' ( uniform usamplerCubeArray)
0:?     'samp1Ds' ( uniform sampler1DShadow)
0:?     'samp2Ds' ( uniform sampler2DShadow)
0:?     'sampCubes' ( uniform samplerCubeShadow)
0:?     'samp1DAs' ( uniform sampler1DArrayShadow)
0:?     'samp2DAs' ( uniform sampler2DArrayShadow)
0:?     'sampCubeAs' ( uniform samplerCubeArrayShadow)
0:?     'sampBuf' ( uniform samplerBuffer)
0:?     'sampRect' ( uniform sampler2DRect)
0:?     'gl_VertexID' ( gl_VertexId int VertexId)
0:?     'gl_InstanceID' ( gl_InstanceId int InstanceId)

