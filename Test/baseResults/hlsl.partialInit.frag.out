hlsl.partialInit.frag
Shader version: 450
gl_FragCoord origin is upper left
0:? Sequence
0:8  Sequence
0:8    move second child to first child (temp 4-component vector of float)
0:8      'gv' (global 4-component vector of float)
0:8      Constant:
0:8        0.000000
0:8        0.000000
0:8        1.000000
0:8        0.000000
0:9  Sequence
0:9    move second child to first child (temp 3-element array of float)
0:9      'gfa' (global 3-element array of float)
0:9      Constant:
0:9        0.000000
0:9        0.000000
0:9        0.000000
0:18  Function Definition: PixelShaderFunction(vf4; (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:18    Function Parameters: 
0:18      'input' (layout(location=0 ) in 4-component vector of float)
0:?     Sequence
0:19      Sequence
0:19        move second child to first child (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:19          'o2' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:19          Constant:
0:19            3 (const int)
0:19            0.000000
0:19            false (const bool)
0:19            0.000000
0:19            0.000000
0:19            0.000000
0:19            0.000000
0:21      move second child to first child (temp 4-component vector of float)
0:21        v: direct index for structure (temp 4-component vector of float)
0:21          'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:21          Constant:
0:21            3 (const int)
0:21        vector-scale (temp 4-component vector of float)
0:21          'gv' (global 4-component vector of float)
0:21          direct index (temp float)
0:21            'gfa' (global 3-element array of float)
0:21            Constant:
0:21              2 (const int)
0:22      Sequence
0:22        move second child to first child (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:22          'o1' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:22          Constant:
0:22            0 (const int)
0:22            0.000000
0:22            false (const bool)
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:23      Sequence
0:23        move second child to first child (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:23          'o3' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:23          Constant:
0:23            0 (const int)
0:23            0.000000
0:23            false (const bool)
0:23            0.000000
0:23            0.000000
0:23            0.000000
0:23            0.000000
0:24      move second child to first child (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:24        'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:24        Constant:
0:24          0 (const int)
0:24          0.000000
0:24          false (const bool)
0:24          0.000000
0:24          0.000000
0:24          0.000000
0:24          0.000000
0:25      move second child to first child (temp bool)
0:25        c: direct index for structure (temp bool)
0:25          'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:25          Constant:
0:25            2 (const int)
0:25        c: direct index for structure (temp bool)
0:25          'o1' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:25          Constant:
0:25            2 (const int)
0:26      Sequence
0:26        move second child to first child (temp structure{temp 4X3 matrix of float m, temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v} os, temp bool b})
0:26          'nest' (temp structure{temp 4X3 matrix of float m, temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v} os, temp bool b})
0:26          Constant:
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0 (const int)
0:26            0.000000
0:26            false (const bool)
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            false (const bool)
0:28      Sequence
0:28        Sequence
0:28          move second child to first child (temp int)
0:?             'a' (layout(location=0 ) out int)
0:28            a: direct index for structure (temp int)
0:28              'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:28              Constant:
0:28                0 (const int)
0:28          move second child to first child (temp float)
0:?             'b' (layout(location=1 ) out float)
0:28            b: direct index for structure (temp float)
0:28              'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:28              Constant:
0:28                1 (const int)
0:28          move second child to first child (temp bool)
0:?             'c' (layout(location=2 ) out bool)
0:28            c: direct index for structure (temp bool)
0:28              'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:28              Constant:
0:28                2 (const int)
0:28          move second child to first child (temp 4-component vector of float)
0:?             'v' (layout(location=3 ) out 4-component vector of float)
0:28            v: direct index for structure (temp 4-component vector of float)
0:28              'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:28              Constant:
0:28                3 (const int)
0:28        Branch: Return
0:?   Linker Objects
0:?     'a' (layout(location=0 ) out int)
0:?     'b' (layout(location=1 ) out float)
0:?     'c' (layout(location=2 ) out bool)
0:?     'v' (layout(location=3 ) out 4-component vector of float)
0:?     'input' (layout(location=0 ) in 4-component vector of float)
0:?     'gv' (global 4-component vector of float)
0:?     'gfa' (global 3-element array of float)


Linked fragment stage:


Shader version: 450
gl_FragCoord origin is upper left
0:? Sequence
0:8  Sequence
0:8    move second child to first child (temp 4-component vector of float)
0:8      'gv' (global 4-component vector of float)
0:8      Constant:
0:8        0.000000
0:8        0.000000
0:8        1.000000
0:8        0.000000
0:9  Sequence
0:9    move second child to first child (temp 3-element array of float)
0:9      'gfa' (global 3-element array of float)
0:9      Constant:
0:9        0.000000
0:9        0.000000
0:9        0.000000
0:18  Function Definition: PixelShaderFunction(vf4; (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:18    Function Parameters: 
0:18      'input' (layout(location=0 ) in 4-component vector of float)
0:?     Sequence
0:19      Sequence
0:19        move second child to first child (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:19          'o2' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:19          Constant:
0:19            3 (const int)
0:19            0.000000
0:19            false (const bool)
0:19            0.000000
0:19            0.000000
0:19            0.000000
0:19            0.000000
0:21      move second child to first child (temp 4-component vector of float)
0:21        v: direct index for structure (temp 4-component vector of float)
0:21          'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:21          Constant:
0:21            3 (const int)
0:21        vector-scale (temp 4-component vector of float)
0:21          'gv' (global 4-component vector of float)
0:21          direct index (temp float)
0:21            'gfa' (global 3-element array of float)
0:21            Constant:
0:21              2 (const int)
0:22      Sequence
0:22        move second child to first child (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:22          'o1' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:22          Constant:
0:22            0 (const int)
0:22            0.000000
0:22            false (const bool)
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:23      Sequence
0:23        move second child to first child (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:23          'o3' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:23          Constant:
0:23            0 (const int)
0:23            0.000000
0:23            false (const bool)
0:23            0.000000
0:23            0.000000
0:23            0.000000
0:23            0.000000
0:24      move second child to first child (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:24        'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:24        Constant:
0:24          0 (const int)
0:24          0.000000
0:24          false (const bool)
0:24          0.000000
0:24          0.000000
0:24          0.000000
0:24          0.000000
0:25      move second child to first child (temp bool)
0:25        c: direct index for structure (temp bool)
0:25          'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:25          Constant:
0:25            2 (const int)
0:25        c: direct index for structure (temp bool)
0:25          'o1' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:25          Constant:
0:25            2 (const int)
0:26      Sequence
0:26        move second child to first child (temp structure{temp 4X3 matrix of float m, temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v} os, temp bool b})
0:26          'nest' (temp structure{temp 4X3 matrix of float m, temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v} os, temp bool b})
0:26          Constant:
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0 (const int)
0:26            0.000000
0:26            false (const bool)
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            false (const bool)
0:28      Sequence
0:28        Sequence
0:28          move second child to first child (temp int)
0:?             'a' (layout(location=0 ) out int)
0:28            a: direct index for structure (temp int)
0:28              'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:28              Constant:
0:28                0 (const int)
0:28          move second child to first child (temp float)
0:?             'b' (layout(location=1 ) out float)
0:28            b: direct index for structure (temp float)
0:28              'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:28              Constant:
0:28                1 (const int)
0:28          move second child to first child (temp bool)
0:?             'c' (layout(location=2 ) out bool)
0:28            c: direct index for structure (temp bool)
0:28              'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:28              Constant:
0:28                2 (const int)
0:28          move second child to first child (temp 4-component vector of float)
0:?             'v' (layout(location=3 ) out 4-component vector of float)
0:28            v: direct index for structure (temp 4-component vector of float)
0:28              'o4' (temp structure{temp int a, temp float b, temp bool c, temp 4-component vector of float v})
0:28              Constant:
0:28                3 (const int)
0:28        Branch: Return
0:?   Linker Objects
0:?     'a' (layout(location=0 ) out int)
0:?     'b' (layout(location=1 ) out float)
0:?     'c' (layout(location=2 ) out bool)
0:?     'v' (layout(location=3 ) out 4-component vector of float)
0:?     'input' (layout(location=0 ) in 4-component vector of float)
0:?     'gv' (global 4-component vector of float)
0:?     'gfa' (global 3-element array of float)

// Module Version 10000
// Generated by (magic number): 80001
// Id's are bound by 75

                              Capability Shader
               1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 4  "PixelShaderFunction" 54 59 65 69 74
                              ExecutionMode 4 OriginUpperLeft
                              Name 4  "PixelShaderFunction"
                              Name 9  "gv"
                              Name 17  "gfa"
                              Name 21  "outs"
                              MemberName 21(outs) 0  "a"
                              MemberName 21(outs) 1  "b"
                              MemberName 21(outs) 2  "c"
                              MemberName 21(outs) 3  "v"
                              Name 23  "o2"
                              Name 28  "o4"
                              Name 37  "o1"
                              Name 40  "o3"
                              Name 47  "Nest"
                              MemberName 47(Nest) 0  "m"
                              MemberName 47(Nest) 1  "os"
                              MemberName 47(Nest) 2  "b"
                              Name 49  "nest"
                              Name 54  "a"
                              Name 59  "b"
                              Name 65  "c"
                              Name 69  "v"
                              Name 74  "input"
                              Decorate 54(a) Location 0
                              Decorate 59(b) Location 1
                              Decorate 65(c) Location 2
                              Decorate 69(v) Location 3
                              Decorate 74(input) Location 0
               2:             TypeVoid
               3:             TypeFunction 2
               6:             TypeFloat 32
               7:             TypeVector 6(float) 4
               8:             TypePointer Private 7(fvec4)
           9(gv):      8(ptr) Variable Private
              10:    6(float) Constant 0
              11:    6(float) Constant 1065353216
              12:    7(fvec4) ConstantComposite 10 10 11 10
              13:             TypeInt 32 0
              14:     13(int) Constant 3
              15:             TypeArray 6(float) 14
              16:             TypePointer Private 15
         17(gfa):     16(ptr) Variable Private
              18:          15 ConstantComposite 10 10 10
              19:             TypeInt 32 1
              20:             TypeBool
        21(outs):             TypeStruct 19(int) 6(float) 20(bool) 7(fvec4)
              22:             TypePointer Function 21(outs)
              24:     19(int) Constant 3
              25:    20(bool) ConstantFalse
              26:    7(fvec4) ConstantComposite 10 10 10 10
              27:    21(outs) ConstantComposite 24 10 25 26
              30:     19(int) Constant 2
              31:             TypePointer Private 6(float)
              35:             TypePointer Function 7(fvec4)
              38:     19(int) Constant 0
              39:    21(outs) ConstantComposite 38 10 25 26
              41:             TypePointer Function 20(bool)
              45:             TypeVector 6(float) 3
              46:             TypeMatrix 45(fvec3) 4
        47(Nest):             TypeStruct 46 21(outs) 20(bool)
              48:             TypePointer Function 47(Nest)
              50:   45(fvec3) ConstantComposite 10 10 10
              51:          46 ConstantComposite 50 50 50 50
              52:    47(Nest) ConstantComposite 51 39 25
              53:             TypePointer Output 19(int)
           54(a):     53(ptr) Variable Output
              55:             TypePointer Function 19(int)
              58:             TypePointer Output 6(float)
           59(b):     58(ptr) Variable Output
              60:     19(int) Constant 1
              61:             TypePointer Function 6(float)
              64:             TypePointer Output 20(bool)
           65(c):     64(ptr) Variable Output
              68:             TypePointer Output 7(fvec4)
           69(v):     68(ptr) Variable Output
              73:             TypePointer Input 7(fvec4)
       74(input):     73(ptr) Variable Input
4(PixelShaderFunction):           2 Function None 3
               5:             Label
          23(o2):     22(ptr) Variable Function
          28(o4):     22(ptr) Variable Function
          37(o1):     22(ptr) Variable Function
          40(o3):     22(ptr) Variable Function
        49(nest):     48(ptr) Variable Function
                              Store 9(gv) 12
                              Store 17(gfa) 18
                              Store 23(o2) 27
              29:    7(fvec4) Load 9(gv)
              32:     31(ptr) AccessChain 17(gfa) 30
              33:    6(float) Load 32
              34:    7(fvec4) VectorTimesScalar 29 33
              36:     35(ptr) AccessChain 28(o4) 24
                              Store 36 34
                              Store 37(o1) 39
                              Store 40(o3) 39
                              Store 28(o4) 39
              42:     41(ptr) AccessChain 37(o1) 30
              43:    20(bool) Load 42
              44:     41(ptr) AccessChain 28(o4) 30
                              Store 44 43
                              Store 49(nest) 52
              56:     55(ptr) AccessChain 28(o4) 38
              57:     19(int) Load 56
                              Store 54(a) 57
              62:     61(ptr) AccessChain 28(o4) 60
              63:    6(float) Load 62
                              Store 59(b) 63
              66:     41(ptr) AccessChain 28(o4) 30
              67:    20(bool) Load 66
                              Store 65(c) 67
              70:     35(ptr) AccessChain 28(o4) 24
              71:    7(fvec4) Load 70
                              Store 69(v) 71
                              Return
                              FunctionEnd
