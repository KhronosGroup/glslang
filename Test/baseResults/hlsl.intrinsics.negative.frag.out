hlsl.intrinsics.negative.frag
ERROR: 0:5: 'asdouble' : no matching overloaded function found, could not match asdouble(float , float )to any of
double asdouble(uint , uint )
double2 asdouble(uint2 , uint2 ) 
ERROR: 0:6: 'CheckAccessFullyMapped' : no matching overloaded function found, could not match CheckAccessFullyMapped(float )to any of
bool CheckAccessFullyMapped(uint ) 
ERROR: 0:8: 'fma' : no matching overloaded function found, could not match fma(float , float , float )to any of
double fma(double , double , double )
double1x1 fma(double1x1 , double1x1 , double1x1 )
double2x1 fma(double2x1 , double2x1 , double2x1 )
double3x1 fma(double3x1 , double3x1 , double3x1 )
double4x1 fma(double4x1 , double4x1 , double4x1 )
double1x2 fma(double1x2 , double1x2 , double1x2 )
double2x2 fma(double2x2 , double2x2 , double2x2 )
double3x2 fma(double3x2 , double3x2 , double3x2 )
double4x2 fma(double4x2 , double4x2 , double4x2 )
double1x3 fma(double1x3 , double1x3 , double1x3 )
double2x3 fma(double2x3 , double2x3 , double2x3 )
double3x3 fma(double3x3 , double3x3 , double3x3 )
double4x3 fma(double4x3 , double4x3 , double4x3 )
double1x4 fma(double1x4 , double1x4 , double1x4 )
double2x4 fma(double2x4 , double2x4 , double2x4 )
double3x4 fma(double3x4 , double3x4 , double3x4 )
double4x4 fma(double4x4 , double4x4 , double4x4 )
double1 fma(double1 , double1 , double1 )
double2 fma(double2 , double2 , double2 )
double3 fma(double3 , double3 , double3 )
double4 fma(double4 , double4 , double4 ) 
ERROR: 0:31: 'asdouble' : no matching overloaded function found, could not match asdouble(float2 , float2 )to any of
double asdouble(uint , uint )
double2 asdouble(uint2 , uint2 ) 
ERROR: 0:32: 'CheckAccessFullyMapped' : no matching overloaded function found, could not match CheckAccessFullyMapped(float2 )to any of
bool CheckAccessFullyMapped(uint ) 
ERROR: 0:33: 'cross' : no matching overloaded function found, could not match cross(float2 , float2 )to any of
float3 cross(float3 , float3 ) 
ERROR: 0:34: 'D3DCOLORtoUBYTE4' : no matching overloaded function found, could not match D3DCOLORtoUBYTE4(float2 )to any of
int4 D3DCOLORtoUBYTE4(float4 ) 
ERROR: 0:35: 'determinant' : no matching overloaded function found, could not match determinant(float2 )to any of
float determinant(float )
float determinant(float1x1 )
float determinant(float2x2 )
float determinant(float3x3 )
float determinant(float4x4 ) 
ERROR: 0:36: 'fma' : no matching overloaded function found, could not match fma(float2 , float2 , float2 )to any of
double fma(double , double , double )
double1x1 fma(double1x1 , double1x1 , double1x1 )
double2x1 fma(double2x1 , double2x1 , double2x1 )
double3x1 fma(double3x1 , double3x1 , double3x1 )
double4x1 fma(double4x1 , double4x1 , double4x1 )
double1x2 fma(double1x2 , double1x2 , double1x2 )
double2x2 fma(double2x2 , double2x2 , double2x2 )
double3x2 fma(double3x2 , double3x2 , double3x2 )
double4x2 fma(double4x2 , double4x2 , double4x2 )
double1x3 fma(double1x3 , double1x3 , double1x3 )
double2x3 fma(double2x3 , double2x3 , double2x3 )
double3x3 fma(double3x3 , double3x3 , double3x3 )
double4x3 fma(double4x3 , double4x3 , double4x3 )
double1x4 fma(double1x4 , double1x4 , double1x4 )
double2x4 fma(double2x4 , double2x4 , double2x4 )
double3x4 fma(double3x4 , double3x4 , double3x4 )
double4x4 fma(double4x4 , double4x4 , double4x4 )
double1 fma(double1 , double1 , double1 )
double2 fma(double2 , double2 , double2 )
double3 fma(double3 , double3 , double3 )
double4 fma(double4 , double4 , double4 ) 
ERROR: 0:37: 'transpose' : no matching overloaded function found, could not match transpose(float2 )to any of
bool1x1 transpose(bool1x1 )
bool1x2 transpose(bool2x1 )
bool1x3 transpose(bool3x1 )
bool1x4 transpose(bool4x1 )
bool2x1 transpose(bool1x2 )
bool2x2 transpose(bool2x2 )
bool2x3 transpose(bool3x2 )
bool2x4 transpose(bool4x2 )
bool3x1 transpose(bool1x3 )
bool3x2 transpose(bool2x3 )
bool3x3 transpose(bool3x3 )
bool3x4 transpose(bool4x3 )
bool4x1 transpose(bool1x4 )
bool4x2 transpose(bool2x4 )
bool4x3 transpose(bool3x4 )
bool4x4 transpose(bool4x4 )
float1x1 transpose(float1x1 )
float1x2 transpose(float2x1 )
float1x3 transpose(float3x1 )
float1x4 transpose(float4x1 )
float2x1 transpose(float1x2 )
float2x2 transpose(float2x2 )
float2x3 transpose(float3x2 )
float2x4 transpose(float4x2 )
float3x1 transpose(float1x3 )
float3x2 transpose(float2x3 )
float3x3 transpose(float3x3 )
float3x4 transpose(float4x3 )
float4x1 transpose(float1x4 )
float4x2 transpose(float2x4 )
float4x3 transpose(float3x4 )
float4x4 transpose(float4x4 )
int1x1 transpose(int1x1 )
int1x2 transpose(int2x1 )
int1x3 transpose(int3x1 )
int1x4 transpose(int4x1 )
int2x1 transpose(int1x2 )
int2x2 transpose(int2x2 )
int2x3 transpose(int3x2 )
int2x4 transpose(int4x2 )
int3x1 transpose(int1x3 )
int3x2 transpose(int2x3 )
int3x3 transpose(int3x3 )
int3x4 transpose(int4x3 )
int4x1 transpose(int1x4 )
int4x2 transpose(int2x4 )
int4x3 transpose(int3x4 )
int4x4 transpose(int4x4 )
uint1x1 transpose(uint1x1 )
uint1x2 transpose(uint2x1 )
uint1x3 transpose(uint3x1 )
uint1x4 transpose(uint4x1 )
uint2x1 transpose(uint1x2 )
uint2x2 transpose(uint2x2 )
uint2x3 transpose(uint3x2 )
uint2x4 transpose(uint4x2 )
uint3x1 transpose(uint1x3 )
uint3x2 transpose(uint2x3 )
uint3x3 transpose(uint3x3 )
uint3x4 transpose(uint4x3 )
uint4x1 transpose(uint1x4 )
uint4x2 transpose(uint2x4 )
uint4x3 transpose(uint3x4 )
uint4x4 transpose(uint4x4 ) 
ERROR: 0:44: 'asdouble' : no matching overloaded function found, could not match asdouble(float3 , float3 )to any of
double asdouble(uint , uint )
double2 asdouble(uint2 , uint2 ) 
ERROR: 0:45: 'CheckAccessFullyMapped' : no matching overloaded function found, could not match CheckAccessFullyMapped(float3 )to any of
bool CheckAccessFullyMapped(uint ) 
ERROR: 0:46: 'D3DCOLORtoUBYTE4' : no matching overloaded function found, could not match D3DCOLORtoUBYTE4(float3 )to any of
int4 D3DCOLORtoUBYTE4(float4 ) 
ERROR: 0:47: 'determinant' : no matching overloaded function found, could not match determinant(float3 )to any of
float determinant(float )
float determinant(float1x1 )
float determinant(float2x2 )
float determinant(float3x3 )
float determinant(float4x4 ) 
ERROR: 0:48: 'fma' : no matching overloaded function found, could not match fma(float3 , float3 , float3 )to any of
double fma(double , double , double )
double1x1 fma(double1x1 , double1x1 , double1x1 )
double2x1 fma(double2x1 , double2x1 , double2x1 )
double3x1 fma(double3x1 , double3x1 , double3x1 )
double4x1 fma(double4x1 , double4x1 , double4x1 )
double1x2 fma(double1x2 , double1x2 , double1x2 )
double2x2 fma(double2x2 , double2x2 , double2x2 )
double3x2 fma(double3x2 , double3x2 , double3x2 )
double4x2 fma(double4x2 , double4x2 , double4x2 )
double1x3 fma(double1x3 , double1x3 , double1x3 )
double2x3 fma(double2x3 , double2x3 , double2x3 )
double3x3 fma(double3x3 , double3x3 , double3x3 )
double4x3 fma(double4x3 , double4x3 , double4x3 )
double1x4 fma(double1x4 , double1x4 , double1x4 )
double2x4 fma(double2x4 , double2x4 , double2x4 )
double3x4 fma(double3x4 , double3x4 , double3x4 )
double4x4 fma(double4x4 , double4x4 , double4x4 )
double1 fma(double1 , double1 , double1 )
double2 fma(double2 , double2 , double2 )
double3 fma(double3 , double3 , double3 )
double4 fma(double4 , double4 , double4 ) 
ERROR: 0:49: 'transpose' : no matching overloaded function found, could not match transpose(float3 )to any of
bool1x1 transpose(bool1x1 )
bool1x2 transpose(bool2x1 )
bool1x3 transpose(bool3x1 )
bool1x4 transpose(bool4x1 )
bool2x1 transpose(bool1x2 )
bool2x2 transpose(bool2x2 )
bool2x3 transpose(bool3x2 )
bool2x4 transpose(bool4x2 )
bool3x1 transpose(bool1x3 )
bool3x2 transpose(bool2x3 )
bool3x3 transpose(bool3x3 )
bool3x4 transpose(bool4x3 )
bool4x1 transpose(bool1x4 )
bool4x2 transpose(bool2x4 )
bool4x3 transpose(bool3x4 )
bool4x4 transpose(bool4x4 )
float1x1 transpose(float1x1 )
float1x2 transpose(float2x1 )
float1x3 transpose(float3x1 )
float1x4 transpose(float4x1 )
float2x1 transpose(float1x2 )
float2x2 transpose(float2x2 )
float2x3 transpose(float3x2 )
float2x4 transpose(float4x2 )
float3x1 transpose(float1x3 )
float3x2 transpose(float2x3 )
float3x3 transpose(float3x3 )
float3x4 transpose(float4x3 )
float4x1 transpose(float1x4 )
float4x2 transpose(float2x4 )
float4x3 transpose(float3x4 )
float4x4 transpose(float4x4 )
int1x1 transpose(int1x1 )
int1x2 transpose(int2x1 )
int1x3 transpose(int3x1 )
int1x4 transpose(int4x1 )
int2x1 transpose(int1x2 )
int2x2 transpose(int2x2 )
int2x3 transpose(int3x2 )
int2x4 transpose(int4x2 )
int3x1 transpose(int1x3 )
int3x2 transpose(int2x3 )
int3x3 transpose(int3x3 )
int3x4 transpose(int4x3 )
int4x1 transpose(int1x4 )
int4x2 transpose(int2x4 )
int4x3 transpose(int3x4 )
int4x4 transpose(int4x4 )
uint1x1 transpose(uint1x1 )
uint1x2 transpose(uint2x1 )
uint1x3 transpose(uint3x1 )
uint1x4 transpose(uint4x1 )
uint2x1 transpose(uint1x2 )
uint2x2 transpose(uint2x2 )
uint2x3 transpose(uint3x2 )
uint2x4 transpose(uint4x2 )
uint3x1 transpose(uint1x3 )
uint3x2 transpose(uint2x3 )
uint3x3 transpose(uint3x3 )
uint3x4 transpose(uint4x3 )
uint4x1 transpose(uint1x4 )
uint4x2 transpose(uint2x4 )
uint4x3 transpose(uint3x4 )
uint4x4 transpose(uint4x4 ) 
ERROR: 0:57: 'asdouble' : no matching overloaded function found, could not match asdouble(float4 , float4 )to any of
double asdouble(uint , uint )
double2 asdouble(uint2 , uint2 ) 
ERROR: 0:58: 'CheckAccessFullyMapped' : no matching overloaded function found, could not match CheckAccessFullyMapped(float4 )to any of
bool CheckAccessFullyMapped(uint ) 
ERROR: 0:59: 'determinant' : no matching overloaded function found, could not match determinant(float4 )to any of
float determinant(float )
float determinant(float1x1 )
float determinant(float2x2 )
float determinant(float3x3 )
float determinant(float4x4 ) 
ERROR: 0:60: 'fma' : no matching overloaded function found, could not match fma(float4 , float4 , float4 )to any of
double fma(double , double , double )
double1x1 fma(double1x1 , double1x1 , double1x1 )
double2x1 fma(double2x1 , double2x1 , double2x1 )
double3x1 fma(double3x1 , double3x1 , double3x1 )
double4x1 fma(double4x1 , double4x1 , double4x1 )
double1x2 fma(double1x2 , double1x2 , double1x2 )
double2x2 fma(double2x2 , double2x2 , double2x2 )
double3x2 fma(double3x2 , double3x2 , double3x2 )
double4x2 fma(double4x2 , double4x2 , double4x2 )
double1x3 fma(double1x3 , double1x3 , double1x3 )
double2x3 fma(double2x3 , double2x3 , double2x3 )
double3x3 fma(double3x3 , double3x3 , double3x3 )
double4x3 fma(double4x3 , double4x3 , double4x3 )
double1x4 fma(double1x4 , double1x4 , double1x4 )
double2x4 fma(double2x4 , double2x4 , double2x4 )
double3x4 fma(double3x4 , double3x4 , double3x4 )
double4x4 fma(double4x4 , double4x4 , double4x4 )
double1 fma(double1 , double1 , double1 )
double2 fma(double2 , double2 , double2 )
double3 fma(double3 , double3 , double3 )
double4 fma(double4 , double4 , double4 ) 
ERROR: 0:61: 'transpose' : no matching overloaded function found, could not match transpose(float4 )to any of
bool1x1 transpose(bool1x1 )
bool1x2 transpose(bool2x1 )
bool1x3 transpose(bool3x1 )
bool1x4 transpose(bool4x1 )
bool2x1 transpose(bool1x2 )
bool2x2 transpose(bool2x2 )
bool2x3 transpose(bool3x2 )
bool2x4 transpose(bool4x2 )
bool3x1 transpose(bool1x3 )
bool3x2 transpose(bool2x3 )
bool3x3 transpose(bool3x3 )
bool3x4 transpose(bool4x3 )
bool4x1 transpose(bool1x4 )
bool4x2 transpose(bool2x4 )
bool4x3 transpose(bool3x4 )
bool4x4 transpose(bool4x4 )
float1x1 transpose(float1x1 )
float1x2 transpose(float2x1 )
float1x3 transpose(float3x1 )
float1x4 transpose(float4x1 )
float2x1 transpose(float1x2 )
float2x2 transpose(float2x2 )
float2x3 transpose(float3x2 )
float2x4 transpose(float4x2 )
float3x1 transpose(float1x3 )
float3x2 transpose(float2x3 )
float3x3 transpose(float3x3 )
float3x4 transpose(float4x3 )
float4x1 transpose(float1x4 )
float4x2 transpose(float2x4 )
float4x3 transpose(float3x4 )
float4x4 transpose(float4x4 )
int1x1 transpose(int1x1 )
int1x2 transpose(int2x1 )
int1x3 transpose(int3x1 )
int1x4 transpose(int4x1 )
int2x1 transpose(int1x2 )
int2x2 transpose(int2x2 )
int2x3 transpose(int3x2 )
int2x4 transpose(int4x2 )
int3x1 transpose(int1x3 )
int3x2 transpose(int2x3 )
int3x3 transpose(int3x3 )
int3x4 transpose(int4x3 )
int4x1 transpose(int1x4 )
int4x2 transpose(int2x4 )
int4x3 transpose(int3x4 )
int4x4 transpose(int4x4 )
uint1x1 transpose(uint1x1 )
uint1x2 transpose(uint2x1 )
uint1x3 transpose(uint3x1 )
uint1x4 transpose(uint4x1 )
uint2x1 transpose(uint1x2 )
uint2x2 transpose(uint2x2 )
uint2x3 transpose(uint3x2 )
uint2x4 transpose(uint4x2 )
uint3x1 transpose(uint1x3 )
uint3x2 transpose(uint2x3 )
uint3x3 transpose(uint3x3 )
uint3x4 transpose(uint4x3 )
uint4x1 transpose(uint1x4 )
uint4x2 transpose(uint2x4 )
uint4x3 transpose(uint3x4 )
uint4x4 transpose(uint4x4 ) 
ERROR: 0:88: 'cross' : no matching overloaded function found, could not match cross(float2x2 , float2x2 )to any of
float3 cross(float3 , float3 ) 
ERROR: 0:88: 'length' : no matching overloaded function found, could not match length(float2x2 )to any of
float length(float1 )
float length(float2 )
float length(float3 )
float length(float4 ) 
ERROR: 0:88: 'noise' : no matching overloaded function found, could not match noise(float2x2 )to any of
float noise(float1 )
float noise(float2 )
float noise(float3 )
float noise(float4 ) 
ERROR: 0:88: 'normalize' : no matching overloaded function found, could not match normalize(float2x2 )to any of
float1 normalize(float1 )
float2 normalize(float2 )
float3 normalize(float3 )
float4 normalize(float4 ) 
ERROR: 0:88: 'reflect' : no matching overloaded function found, could not match reflect(float2x2 , float2x2 )to any of
float1 reflect(float1 , float1 )
float2 reflect(float2 , float2 )
float3 reflect(float3 , float3 )
float4 reflect(float4 , float4 ) 
ERROR: 0:88: 'refract' : no matching overloaded function found, could not match refract(float2x2 , float2x2 , float )to any of
float1 refract(float1 , float1 , float )
float2 refract(float2 , float2 , float )
float3 refract(float3 , float3 , float )
float4 refract(float4 , float4 , float ) 
ERROR: 0:96: 'D3DCOLORtoUBYTE4' : no matching overloaded function found, could not match D3DCOLORtoUBYTE4(float3x3 )to any of
int4 D3DCOLORtoUBYTE4(float4 ) 
ERROR: 0:96: 'cross' : no matching overloaded function found, could not match cross(float3x3 , float3x3 )to any of
float3 cross(float3 , float3 ) 
ERROR: 0:96: 'length' : no matching overloaded function found, could not match length(float3x3 )to any of
float length(float1 )
float length(float2 )
float length(float3 )
float length(float4 ) 
ERROR: 0:96: 'noise' : no matching overloaded function found, could not match noise(float3x3 )to any of
float noise(float1 )
float noise(float2 )
float noise(float3 )
float noise(float4 ) 
ERROR: 0:96: 'normalize' : no matching overloaded function found, could not match normalize(float3x3 )to any of
float1 normalize(float1 )
float2 normalize(float2 )
float3 normalize(float3 )
float4 normalize(float4 ) 
ERROR: 0:96: 'reflect' : no matching overloaded function found, could not match reflect(float3x3 , float3x3 )to any of
float1 reflect(float1 , float1 )
float2 reflect(float2 , float2 )
float3 reflect(float3 , float3 )
float4 reflect(float4 , float4 ) 
ERROR: 0:96: 'refract' : no matching overloaded function found, could not match refract(float3x3 , float3x3 , float )to any of
float1 refract(float1 , float1 , float )
float2 refract(float2 , float2 , float )
float3 refract(float3 , float3 , float )
float4 refract(float4 , float4 , float ) 
ERROR: 0:104: 'D3DCOLORtoUBYTE4' : no matching overloaded function found, could not match D3DCOLORtoUBYTE4(float4x4 )to any of
int4 D3DCOLORtoUBYTE4(float4 ) 
ERROR: 0:104: 'cross' : no matching overloaded function found, could not match cross(float4x4 , float4x4 )to any of
float3 cross(float3 , float3 ) 
ERROR: 0:104: 'length' : no matching overloaded function found, could not match length(float4x4 )to any of
float length(float1 )
float length(float2 )
float length(float3 )
float length(float4 ) 
ERROR: 0:104: 'noise' : no matching overloaded function found, could not match noise(float4x4 )to any of
float noise(float1 )
float noise(float2 )
float noise(float3 )
float noise(float4 ) 
ERROR: 0:104: 'normalize' : no matching overloaded function found, could not match normalize(float4x4 )to any of
float1 normalize(float1 )
float2 normalize(float2 )
float3 normalize(float3 )
float4 normalize(float4 ) 
ERROR: 0:104: 'reflect' : no matching overloaded function found, could not match reflect(float4x4 , float4x4 )to any of
float1 reflect(float1 , float1 )
float2 reflect(float2 , float2 )
float3 reflect(float3 , float3 )
float4 reflect(float4 , float4 ) 
ERROR: 0:104: 'refract' : no matching overloaded function found, could not match refract(float4x4 , float4x4 , float )to any of
float1 refract(float1 , float1 , float )
float2 refract(float2 , float2 , float )
float3 refract(float3 , float3 , float )
float4 refract(float4 , float4 , float ) 
ERROR: 41 compilation errors.  No code generated.


Shader version: 500
gl_FragCoord origin is upper left
ERROR: node is still EOpNull!
0:2  Function Definition: PixelShaderFunctionS(f1;f1;f1;i1; ( temp float)
0:2    Function Parameters: 
0:2      'inF0' ( in float)
0:2      'inF1' ( in float)
0:2      'inF2' ( in float)
0:2      'inI0' ( in int)
0:?     Sequence
0:5      Constant:
0:5        0.000000
0:6      Constant:
0:6        0.000000
0:8      Constant:
0:8        0.000000
0:17      Branch: Return with expression
0:17        Constant:
0:17          0.000000
0:21  Function Definition: PixelShaderFunction1(vf1;vf1;vf1;vi1; ( temp 1-component vector of float)
0:21    Function Parameters: 
0:21      'inF0' ( in 1-component vector of float)
0:21      'inF1' ( in 1-component vector of float)
0:21      'inF2' ( in 1-component vector of float)
0:21      'inI0' ( in 1-component vector of int)
0:?     Sequence
0:24      Function Call: GetRenderTargetSamplePosition(vi1; ( temp 2-component vector of float)
0:24        Construct int ( in 1-component vector of int)
0:24          Convert float to int ( temp int)
0:24            'inF0' ( in 1-component vector of float)
0:26      Branch: Return with expression
0:26        Constant:
0:26          0.000000
0:30  Function Definition: PixelShaderFunction2(vf2;vf2;vf2;vi2; ( temp 2-component vector of float)
0:30    Function Parameters: 
0:30      'inF0' ( in 2-component vector of float)
0:30      'inF1' ( in 2-component vector of float)
0:30      'inF2' ( in 2-component vector of float)
0:30      'inI0' ( in 2-component vector of int)
0:?     Sequence
0:31      Constant:
0:31        0.000000
0:32      Constant:
0:32        0.000000
0:33      Constant:
0:33        0.000000
0:34      Constant:
0:34        0.000000
0:35      Constant:
0:35        0.000000
0:36      Constant:
0:36        0.000000
0:37      Constant:
0:37        0.000000
0:39      Branch: Return with expression
0:?         Constant:
0:?           1.000000
0:?           2.000000
0:43  Function Definition: PixelShaderFunction3(vf3;vf3;vf3;vi3; ( temp 3-component vector of float)
0:43    Function Parameters: 
0:43      'inF0' ( in 3-component vector of float)
0:43      'inF1' ( in 3-component vector of float)
0:43      'inF2' ( in 3-component vector of float)
0:43      'inI0' ( in 3-component vector of int)
0:?     Sequence
0:44      Constant:
0:44        0.000000
0:45      Constant:
0:45        0.000000
0:46      Constant:
0:46        0.000000
0:47      Constant:
0:47        0.000000
0:48      Constant:
0:48        0.000000
0:49      Constant:
0:49        0.000000
0:52      Branch: Return with expression
0:?         Constant:
0:?           1.000000
0:?           2.000000
0:?           3.000000
0:56  Function Definition: @PixelShaderFunction(vf4;vf4;vf4;vi4; ( temp 4-component vector of float)
0:56    Function Parameters: 
0:56      'inF0' ( in 4-component vector of float)
0:56      'inF1' ( in 4-component vector of float)
0:56      'inF2' ( in 4-component vector of float)
0:56      'inI0' ( in 4-component vector of int)
0:?     Sequence
0:57      Constant:
0:57        0.000000
0:58      Constant:
0:58        0.000000
0:59      Constant:
0:59        0.000000
0:60      Constant:
0:60        0.000000
0:61      Constant:
0:61        0.000000
0:63      Branch: Return with expression
0:?         Constant:
0:?           1.000000
0:?           2.000000
0:?           3.000000
0:?           4.000000
0:56  Function Definition: PixelShaderFunction( ( temp void)
0:56    Function Parameters: 
0:?     Sequence
0:56      move second child to first child ( temp 4-component vector of float)
0:?         'inF0' ( temp 4-component vector of float)
0:?         'inF0' (layout( location=0) in 4-component vector of float)
0:56      move second child to first child ( temp 4-component vector of float)
0:?         'inF1' ( temp 4-component vector of float)
0:?         'inF1' (layout( location=1) in 4-component vector of float)
0:56      move second child to first child ( temp 4-component vector of float)
0:?         'inF2' ( temp 4-component vector of float)
0:?         'inF2' (layout( location=2) in 4-component vector of float)
0:56      move second child to first child ( temp 4-component vector of int)
0:?         'inI0' ( temp 4-component vector of int)
0:?         'inI0' (layout( location=3) flat in 4-component vector of int)
0:56      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:56        Function Call: @PixelShaderFunction(vf4;vf4;vf4;vi4; ( temp 4-component vector of float)
0:?           'inF0' ( temp 4-component vector of float)
0:?           'inF1' ( temp 4-component vector of float)
0:?           'inF2' ( temp 4-component vector of float)
0:?           'inI0' ( temp 4-component vector of int)
0:86  Function Definition: PixelShaderFunction2x2(mf22;mf22;mf22; ( temp 2X2 matrix of float)
0:86    Function Parameters: 
0:86      'inF0' ( in 2X2 matrix of float)
0:86      'inF1' ( in 2X2 matrix of float)
0:86      'inF2' ( in 2X2 matrix of float)
0:?     Sequence
0:88      bitCount ( temp uint)
0:88        Construct uint ( in uint)
0:88          Convert float to uint ( temp 2X2 matrix of uint)
0:88            'inF0' ( in 2X2 matrix of float)
0:88      Convert float to int ( temp 4-component vector of int)
0:88        vector-scale ( temp 4-component vector of float)
0:88          Constant:
0:88            255.001953
0:88          vector swizzle ( temp 4-component vector of float)
0:88            Construct vec4 ( in 4-component vector of float)
0:88              'inF0' ( in 2X2 matrix of float)
0:88            Sequence
0:88              Constant:
0:88                2 (const int)
0:88              Constant:
0:88                1 (const int)
0:88              Constant:
0:88                0 (const int)
0:88              Constant:
0:88                3 (const int)
0:88      Constant:
0:88        0.000000
0:88      direct index ( temp float)
0:88        unpackHalf2x16 ( temp 2-component vector of float)
0:88          Construct uint ( in uint)
0:88            Convert float to uint ( temp 2X2 matrix of uint)
0:88              'inF0' ( in 2X2 matrix of float)
0:88        Constant:
0:88          0 (const int)
0:88      findMSB ( temp int)
0:88        Construct int ( in int)
0:88          Convert float to int ( temp 2X2 matrix of int)
0:88            'inF0' ( in 2X2 matrix of float)
0:88      findLSB ( temp int)
0:88        Construct int ( in int)
0:88          Convert float to int ( temp 2X2 matrix of int)
0:88            'inF0' ( in 2X2 matrix of float)
0:88      bitFieldReverse ( temp uint)
0:88        Construct uint ( in uint)
0:88          Convert float to uint ( temp 2X2 matrix of uint)
0:88            'inF0' ( in 2X2 matrix of float)
0:88      Constant:
0:88        0.000000
0:88      Constant:
0:88        0.000000
0:88      Constant:
0:88        0.000000
0:88      Constant:
0:88        0.000000
0:88      Constant:
0:88        0.000000
0:88      bitFieldReverse ( temp uint)
0:88        Construct uint ( in uint)
0:88          Convert float to uint ( temp 2X2 matrix of uint)
0:88            'inF0' ( in 2X2 matrix of float)
0:90      Branch: Return with expression
0:?         Constant:
0:?           2.000000
0:?           2.000000
0:?           2.000000
0:?           2.000000
0:94  Function Definition: PixelShaderFunction3x3(mf33;mf33;mf33; ( temp 3X3 matrix of float)
0:94    Function Parameters: 
0:94      'inF0' ( in 3X3 matrix of float)
0:94      'inF1' ( in 3X3 matrix of float)
0:94      'inF2' ( in 3X3 matrix of float)
0:?     Sequence
0:96      bitCount ( temp uint)
0:96        Construct uint ( in uint)
0:96          Convert float to uint ( temp 3X3 matrix of uint)
0:96            'inF0' ( in 3X3 matrix of float)
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      direct index ( temp float)
0:96        unpackHalf2x16 ( temp 2-component vector of float)
0:96          Construct uint ( in uint)
0:96            Convert float to uint ( temp 3X3 matrix of uint)
0:96              'inF0' ( in 3X3 matrix of float)
0:96        Constant:
0:96          0 (const int)
0:96      findMSB ( temp int)
0:96        Construct int ( in int)
0:96          Convert float to int ( temp 3X3 matrix of int)
0:96            'inF0' ( in 3X3 matrix of float)
0:96      findLSB ( temp int)
0:96        Construct int ( in int)
0:96          Convert float to int ( temp 3X3 matrix of int)
0:96            'inF0' ( in 3X3 matrix of float)
0:96      bitFieldReverse ( temp uint)
0:96        Construct uint ( in uint)
0:96          Convert float to uint ( temp 3X3 matrix of uint)
0:96            'inF0' ( in 3X3 matrix of float)
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      bitFieldReverse ( temp uint)
0:96        Construct uint ( in uint)
0:96          Convert float to uint ( temp 3X3 matrix of uint)
0:96            'inF0' ( in 3X3 matrix of float)
0:98      Branch: Return with expression
0:?         Constant:
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:102  Function Definition: PixelShaderFunction4x4(mf44;mf44;mf44; ( temp 4X4 matrix of float)
0:102    Function Parameters: 
0:102      'inF0' ( in 4X4 matrix of float)
0:102      'inF1' ( in 4X4 matrix of float)
0:102      'inF2' ( in 4X4 matrix of float)
0:?     Sequence
0:104      bitCount ( temp uint)
0:104        Construct uint ( in uint)
0:104          Convert float to uint ( temp 4X4 matrix of uint)
0:104            'inF0' ( in 4X4 matrix of float)
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      direct index ( temp float)
0:104        unpackHalf2x16 ( temp 2-component vector of float)
0:104          Construct uint ( in uint)
0:104            Convert float to uint ( temp 4X4 matrix of uint)
0:104              'inF0' ( in 4X4 matrix of float)
0:104        Constant:
0:104          0 (const int)
0:104      findMSB ( temp int)
0:104        Construct int ( in int)
0:104          Convert float to int ( temp 4X4 matrix of int)
0:104            'inF0' ( in 4X4 matrix of float)
0:104      findLSB ( temp int)
0:104        Construct int ( in int)
0:104          Convert float to int ( temp 4X4 matrix of int)
0:104            'inF0' ( in 4X4 matrix of float)
0:104      bitFieldReverse ( temp uint)
0:104        Construct uint ( in uint)
0:104          Convert float to uint ( temp 4X4 matrix of uint)
0:104            'inF0' ( in 4X4 matrix of float)
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      bitFieldReverse ( temp uint)
0:104        Construct uint ( in uint)
0:104          Convert float to uint ( temp 4X4 matrix of uint)
0:104            'inF0' ( in 4X4 matrix of float)
0:106      Branch: Return with expression
0:?         Constant:
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?   Linker Objects
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:?     'inF0' (layout( location=0) in 4-component vector of float)
0:?     'inF1' (layout( location=1) in 4-component vector of float)
0:?     'inF2' (layout( location=2) in 4-component vector of float)
0:?     'inI0' (layout( location=3) flat in 4-component vector of int)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
ERROR: node is still EOpNull!
0:2  Function Definition: PixelShaderFunctionS(f1;f1;f1;i1; ( temp float)
0:2    Function Parameters: 
0:2      'inF0' ( in float)
0:2      'inF1' ( in float)
0:2      'inF2' ( in float)
0:2      'inI0' ( in int)
0:?     Sequence
0:5      Constant:
0:5        0.000000
0:6      Constant:
0:6        0.000000
0:8      Constant:
0:8        0.000000
0:17      Branch: Return with expression
0:17        Constant:
0:17          0.000000
0:21  Function Definition: PixelShaderFunction1(vf1;vf1;vf1;vi1; ( temp 1-component vector of float)
0:21    Function Parameters: 
0:21      'inF0' ( in 1-component vector of float)
0:21      'inF1' ( in 1-component vector of float)
0:21      'inF2' ( in 1-component vector of float)
0:21      'inI0' ( in 1-component vector of int)
0:?     Sequence
0:24      Function Call: GetRenderTargetSamplePosition(vi1; ( temp 2-component vector of float)
0:24        Construct int ( in 1-component vector of int)
0:24          Convert float to int ( temp int)
0:24            'inF0' ( in 1-component vector of float)
0:26      Branch: Return with expression
0:26        Constant:
0:26          0.000000
0:30  Function Definition: PixelShaderFunction2(vf2;vf2;vf2;vi2; ( temp 2-component vector of float)
0:30    Function Parameters: 
0:30      'inF0' ( in 2-component vector of float)
0:30      'inF1' ( in 2-component vector of float)
0:30      'inF2' ( in 2-component vector of float)
0:30      'inI0' ( in 2-component vector of int)
0:?     Sequence
0:31      Constant:
0:31        0.000000
0:32      Constant:
0:32        0.000000
0:33      Constant:
0:33        0.000000
0:34      Constant:
0:34        0.000000
0:35      Constant:
0:35        0.000000
0:36      Constant:
0:36        0.000000
0:37      Constant:
0:37        0.000000
0:39      Branch: Return with expression
0:?         Constant:
0:?           1.000000
0:?           2.000000
0:43  Function Definition: PixelShaderFunction3(vf3;vf3;vf3;vi3; ( temp 3-component vector of float)
0:43    Function Parameters: 
0:43      'inF0' ( in 3-component vector of float)
0:43      'inF1' ( in 3-component vector of float)
0:43      'inF2' ( in 3-component vector of float)
0:43      'inI0' ( in 3-component vector of int)
0:?     Sequence
0:44      Constant:
0:44        0.000000
0:45      Constant:
0:45        0.000000
0:46      Constant:
0:46        0.000000
0:47      Constant:
0:47        0.000000
0:48      Constant:
0:48        0.000000
0:49      Constant:
0:49        0.000000
0:52      Branch: Return with expression
0:?         Constant:
0:?           1.000000
0:?           2.000000
0:?           3.000000
0:56  Function Definition: @PixelShaderFunction(vf4;vf4;vf4;vi4; ( temp 4-component vector of float)
0:56    Function Parameters: 
0:56      'inF0' ( in 4-component vector of float)
0:56      'inF1' ( in 4-component vector of float)
0:56      'inF2' ( in 4-component vector of float)
0:56      'inI0' ( in 4-component vector of int)
0:?     Sequence
0:57      Constant:
0:57        0.000000
0:58      Constant:
0:58        0.000000
0:59      Constant:
0:59        0.000000
0:60      Constant:
0:60        0.000000
0:61      Constant:
0:61        0.000000
0:63      Branch: Return with expression
0:?         Constant:
0:?           1.000000
0:?           2.000000
0:?           3.000000
0:?           4.000000
0:56  Function Definition: PixelShaderFunction( ( temp void)
0:56    Function Parameters: 
0:?     Sequence
0:56      move second child to first child ( temp 4-component vector of float)
0:?         'inF0' ( temp 4-component vector of float)
0:?         'inF0' (layout( location=0) in 4-component vector of float)
0:56      move second child to first child ( temp 4-component vector of float)
0:?         'inF1' ( temp 4-component vector of float)
0:?         'inF1' (layout( location=1) in 4-component vector of float)
0:56      move second child to first child ( temp 4-component vector of float)
0:?         'inF2' ( temp 4-component vector of float)
0:?         'inF2' (layout( location=2) in 4-component vector of float)
0:56      move second child to first child ( temp 4-component vector of int)
0:?         'inI0' ( temp 4-component vector of int)
0:?         'inI0' (layout( location=3) flat in 4-component vector of int)
0:56      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:56        Function Call: @PixelShaderFunction(vf4;vf4;vf4;vi4; ( temp 4-component vector of float)
0:?           'inF0' ( temp 4-component vector of float)
0:?           'inF1' ( temp 4-component vector of float)
0:?           'inF2' ( temp 4-component vector of float)
0:?           'inI0' ( temp 4-component vector of int)
0:86  Function Definition: PixelShaderFunction2x2(mf22;mf22;mf22; ( temp 2X2 matrix of float)
0:86    Function Parameters: 
0:86      'inF0' ( in 2X2 matrix of float)
0:86      'inF1' ( in 2X2 matrix of float)
0:86      'inF2' ( in 2X2 matrix of float)
0:?     Sequence
0:88      bitCount ( temp uint)
0:88        Construct uint ( in uint)
0:88          Convert float to uint ( temp 2X2 matrix of uint)
0:88            'inF0' ( in 2X2 matrix of float)
0:88      Convert float to int ( temp 4-component vector of int)
0:88        vector-scale ( temp 4-component vector of float)
0:88          Constant:
0:88            255.001953
0:88          vector swizzle ( temp 4-component vector of float)
0:88            Construct vec4 ( in 4-component vector of float)
0:88              'inF0' ( in 2X2 matrix of float)
0:88            Sequence
0:88              Constant:
0:88                2 (const int)
0:88              Constant:
0:88                1 (const int)
0:88              Constant:
0:88                0 (const int)
0:88              Constant:
0:88                3 (const int)
0:88      Constant:
0:88        0.000000
0:88      direct index ( temp float)
0:88        unpackHalf2x16 ( temp 2-component vector of float)
0:88          Construct uint ( in uint)
0:88            Convert float to uint ( temp 2X2 matrix of uint)
0:88              'inF0' ( in 2X2 matrix of float)
0:88        Constant:
0:88          0 (const int)
0:88      findMSB ( temp int)
0:88        Construct int ( in int)
0:88          Convert float to int ( temp 2X2 matrix of int)
0:88            'inF0' ( in 2X2 matrix of float)
0:88      findLSB ( temp int)
0:88        Construct int ( in int)
0:88          Convert float to int ( temp 2X2 matrix of int)
0:88            'inF0' ( in 2X2 matrix of float)
0:88      bitFieldReverse ( temp uint)
0:88        Construct uint ( in uint)
0:88          Convert float to uint ( temp 2X2 matrix of uint)
0:88            'inF0' ( in 2X2 matrix of float)
0:88      Constant:
0:88        0.000000
0:88      Constant:
0:88        0.000000
0:88      Constant:
0:88        0.000000
0:88      Constant:
0:88        0.000000
0:88      Constant:
0:88        0.000000
0:88      bitFieldReverse ( temp uint)
0:88        Construct uint ( in uint)
0:88          Convert float to uint ( temp 2X2 matrix of uint)
0:88            'inF0' ( in 2X2 matrix of float)
0:90      Branch: Return with expression
0:?         Constant:
0:?           2.000000
0:?           2.000000
0:?           2.000000
0:?           2.000000
0:94  Function Definition: PixelShaderFunction3x3(mf33;mf33;mf33; ( temp 3X3 matrix of float)
0:94    Function Parameters: 
0:94      'inF0' ( in 3X3 matrix of float)
0:94      'inF1' ( in 3X3 matrix of float)
0:94      'inF2' ( in 3X3 matrix of float)
0:?     Sequence
0:96      bitCount ( temp uint)
0:96        Construct uint ( in uint)
0:96          Convert float to uint ( temp 3X3 matrix of uint)
0:96            'inF0' ( in 3X3 matrix of float)
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      direct index ( temp float)
0:96        unpackHalf2x16 ( temp 2-component vector of float)
0:96          Construct uint ( in uint)
0:96            Convert float to uint ( temp 3X3 matrix of uint)
0:96              'inF0' ( in 3X3 matrix of float)
0:96        Constant:
0:96          0 (const int)
0:96      findMSB ( temp int)
0:96        Construct int ( in int)
0:96          Convert float to int ( temp 3X3 matrix of int)
0:96            'inF0' ( in 3X3 matrix of float)
0:96      findLSB ( temp int)
0:96        Construct int ( in int)
0:96          Convert float to int ( temp 3X3 matrix of int)
0:96            'inF0' ( in 3X3 matrix of float)
0:96      bitFieldReverse ( temp uint)
0:96        Construct uint ( in uint)
0:96          Convert float to uint ( temp 3X3 matrix of uint)
0:96            'inF0' ( in 3X3 matrix of float)
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      Constant:
0:96        0.000000
0:96      bitFieldReverse ( temp uint)
0:96        Construct uint ( in uint)
0:96          Convert float to uint ( temp 3X3 matrix of uint)
0:96            'inF0' ( in 3X3 matrix of float)
0:98      Branch: Return with expression
0:?         Constant:
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:?           3.000000
0:102  Function Definition: PixelShaderFunction4x4(mf44;mf44;mf44; ( temp 4X4 matrix of float)
0:102    Function Parameters: 
0:102      'inF0' ( in 4X4 matrix of float)
0:102      'inF1' ( in 4X4 matrix of float)
0:102      'inF2' ( in 4X4 matrix of float)
0:?     Sequence
0:104      bitCount ( temp uint)
0:104        Construct uint ( in uint)
0:104          Convert float to uint ( temp 4X4 matrix of uint)
0:104            'inF0' ( in 4X4 matrix of float)
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      direct index ( temp float)
0:104        unpackHalf2x16 ( temp 2-component vector of float)
0:104          Construct uint ( in uint)
0:104            Convert float to uint ( temp 4X4 matrix of uint)
0:104              'inF0' ( in 4X4 matrix of float)
0:104        Constant:
0:104          0 (const int)
0:104      findMSB ( temp int)
0:104        Construct int ( in int)
0:104          Convert float to int ( temp 4X4 matrix of int)
0:104            'inF0' ( in 4X4 matrix of float)
0:104      findLSB ( temp int)
0:104        Construct int ( in int)
0:104          Convert float to int ( temp 4X4 matrix of int)
0:104            'inF0' ( in 4X4 matrix of float)
0:104      bitFieldReverse ( temp uint)
0:104        Construct uint ( in uint)
0:104          Convert float to uint ( temp 4X4 matrix of uint)
0:104            'inF0' ( in 4X4 matrix of float)
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      Constant:
0:104        0.000000
0:104      bitFieldReverse ( temp uint)
0:104        Construct uint ( in uint)
0:104          Convert float to uint ( temp 4X4 matrix of uint)
0:104            'inF0' ( in 4X4 matrix of float)
0:106      Branch: Return with expression
0:?         Constant:
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?           4.000000
0:?   Linker Objects
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:?     'inF0' (layout( location=0) in 4-component vector of float)
0:?     'inF1' (layout( location=1) in 4-component vector of float)
0:?     'inF2' (layout( location=2) in 4-component vector of float)
0:?     'inI0' (layout( location=3) flat in 4-component vector of int)

SPIR-V is not generated for failed compile or link
